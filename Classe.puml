@startuml diagramme de classe total
skinparam groupInheritance 2

package Model {
    class client {
        Id_client : int
        Nom : string
        Prénom : string
        Genre : string
        Adresse_Postal : string
        Code_Postal : int
        Ville : string
        Téléphone : string
        Adresse_mail : string
        Commande_en_cours : list[Id_commande]
        Historique_commande: list[Id_commande]
        Newsletters : boolean
        {field} Solde : décimal()
    }

    class commande {
        Id_commande : int
        Id_client : int
        Liste_id_objet : list[Id_objet]
        Quantité_d_objet : int
        Numéro_de_suivie : int
        Type_d_emballage : int je suis pas sur de le garder
        Etat : string => pour indiqué si c'est en cours, posté ou arrivé
        {field} Prix : décimal ()
        {field} Poids : décimal ()

    }

    class objet {
        Id_objet : int
        {field} Poids : décimal ()
        Nom : string
        Description : string
        Disponible : boolean
        Modèle : string pas sur de la garder
        {field} Prix : décimal ()
    }

    class Emballage {
        Id_emballage : int
        Nom : string
        Quantité_minimum : int
        Quantité_maximum : int
        {field} Poids : décimal ()
    }

    class Enseigne {
        Numéro_Enseigne : int
        Nom_Enseigne : string
        Ville : string
        Département : int
    }

    class Utilisateur {
        Id_utilisateur : int
        Nom : string
        Mot_de_passe : string
    }

    class Timbre {
        Poids_maximum : int
        {field} Prix : décimal ()
    }

    class Administrateur {
        
    }
}

client "0..*" -- "1" commande : Passe
commande "1..1" -- "1..*" objet : peut être un agregat à revoir
Emballage "1..1"-- "1..*"objet : peut en contenir plusieurs
'Emballage -- commande : va contenir la commande
Emballage "1..1"-- "1..*"Timbre : peut en avoir plusieurs
Utilisateur "1..*" -- "0..*"client : implemente
'Enseigne -- client : va acheter
Administrateur --|> Utilisateur

package Logique_metier {

    package Controler_gestion_de_commande {

        class Controler_Commande {
            + CreerUneCommande()
        }

        class Controler_Produits{
            + ChoixProduits()
            + VerificationDesStocksProduits()
        }

        class Controler_Emballage {
            + ChoixEmballage()
            + VerificationDesStockEmballage()
        }

        class Controler_conditionnement {
            + CalculDesFraisDePorts()
            + ValidationDesFraisDePorts()
        }

        class Controler_suivie_commande {
            + ValiderLeNumeroDeSuivie()
        }
    }

    package Communication {

        class Mail_personaliser {
            Mail_personaliser(Titre_du_mail, Corps_mail, Client)
        }

        class Newsletters {
            Newsletters(Fichier_texte)
        }

        abstract Mail {
            + Titre_du_mail : string
            + Corps_mail : string
        }

        class Envoyer_Mail{
            + Liste_de_mail
            EnvoyerMail(Titre_du_mail, Corps_mail, Liste_de_mail)
        }
    }

    package Impression {

        interface I_Imprimable{
            +ImprimerDocuments()
        }

        class Impression_liste_client {
            + Liste_de_client : list[client]
            + ImprimerDocuments()
        }

        class Impression_commande_client {
            + Commande_en_cours_client : list[id_commande]
            + ImprimerDocuments()
        }

        class Impression_rapport_statistique {
            + Rapport_statistique
            + ImprimerDocuments()
        }

    }

    package Generator_Statistique {

        abstract Generator_Rapport_Statistique {
            + Generator_Rapport_Statistique() : Rapport_statistique
        }

        class Generator_Rapport_Statistique_Produits {
            + Generator_Rapport_Statistique_Produits()
        }

        class Generator_Rapport_Statistique_Enseigne {
            + Generator_Rapport_Statistique_Enseigne()
        }

        class Generator_Rapport_Statistique_Client {
            + Generator_Rapport_Statistique_Client()
        }

        class Generator_Rapport_Statistique_Commande {
            + Generator_Rapport_Statistique_Commande()
        }
        
    }
    

    package Service_CRUD {
        class Service_client {

        }
        class Service_objet {

        }
        class Service_commande {

        }
        class Service_Emballage {

        }
        class Service_Utilisateur {

        }
        class Service_Timbre {

        }
    }
}

'Creation_de_commande <|.. Base_Creation_de_commande
'Base_Creation_de_commande <|-- Handler_Produits
'Base_Creation_de_commande <|-- Handler_Emballage
'Base_Creation_de_commande <|-- Handler_conditionnement
'Base_Creation_de_commande <|-- Handler_suivie_commande


Mail <|-- Envoyer_Mail
Envoyer_Mail <|-- Newsletters
Envoyer_Mail <|-- Mail_personaliser



I_Imprimable <|-- Impression_commande_client
I_Imprimable <|-- Impression_liste_client
I_Imprimable <|-- Impression_rapport_statistique

Generator_Rapport_Statistique <|-- Generator_Rapport_Statistique_Enseigne
Generator_Rapport_Statistique <|-- Generator_Rapport_Statistique_Produits
Generator_Rapport_Statistique <|-- Generator_Rapport_Statistique_Commande
Generator_Rapport_Statistique <|-- Generator_Rapport_Statistique_Client

Impression_rapport_statistique --> Generator_Rapport_Statistique : elle l'implemente trouver le symbole



@enduml